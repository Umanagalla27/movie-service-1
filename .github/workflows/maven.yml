# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: mvn -B clean package -DskipTests
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USER }}
        password: ${{ secrets.DOCKERHUB_PWD }}
    
    - name: Build & Push Docker Image
      env:
        IMAGE_NAME: ${{ secrets.DOCKERHUB_USER }}/movie-service
      run: |
        mvn -B spring-boot:build-image \
          -Dspring-boot.build-image.imageName=${IMAGE_NAME}:${GITHUB_SHA::7} \
          -Dspring-boot.build-image.imageName=${IMAGE_NAME}:latest \
          -Dspring-boot.build-image.publish=true \
          -DskipTests || \
        docker buildx build --platform linux/amd64,linux/arm64 \
          -t ${IMAGE_NAME}:latest \
          -t ${IMAGE_NAME}:${GITHUB_SHA::7} \
          --push .
